using UnityEngine;

public class AdvancedMovement : MonoBehaviour
{
    public float movementSpeed = 5f;
    public float jumpForce = 5f;
    public float wallClimbSpeed = 2f;
    public float slideSpeed = 10f;
    public float slideDuration = 1f;
    public float doubleJumpForce = 10f;

    private Rigidbody2D rb;
    private bool isJumping = false;
    private bool isDoubleJumping = false;
    private bool isSliding = false;
    private bool isWallClimbing = false;

    private void Awake()
    {
        rb = GetComponent<Rigidbody2D>();
    }

    private void Update()
    {
        float horizontalInput = Input.GetAxis("Horizontal");

        if (isWallClimbing)
        {
            // Implement wall climbing logic here
        }
        else if (isSliding)
        {
            // Implement sliding logic here
        }
        else
        {
            // Regular movement logic
            rb.velocity = new Vector2(horizontalInput * movementSpeed, rb.velocity.y);

            if (Input.GetButtonDown("Jump") && !isJumping)
            {
                Jump();
            }
            else if (Input.GetButtonDown("Jump") && isJumping && !isDoubleJumping)
            {
                DoubleJump();
            }
        }
    }

    private void Jump()
    {
        rb.velocity = new Vector2(rb.velocity.x, jumpForce);
        isJumping = true;
    }

    private void DoubleJump()
    {
        rb.velocity = new Vector2(rb.velocity.x, doubleJumpForce);
        isDoubleJumping = true;
    }

    private void OnCollisionEnter2D(Collision2D collision)
    {
        if (collision.gameObject.CompareTag("Ground"))
        {
            isJumping = false;
            isDoubleJumping = false;
        }
        else if (collision.gameObject.CompareTag("Wall"))
        {
            isWallClimbing = true;
        }
    }

    private void OnCollisionExit2D(Collision2D collision)
    {
        if (collision.gameObject.CompareTag("Wall"))
        {
            isWallClimbing = false;
        }
    }
}
